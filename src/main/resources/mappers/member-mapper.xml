<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC 
"-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="memberMapper">
	<resultMap id="memberResultSet" type="Member">
		<id property="userNo" column="USER_NO"/>
		<result property="token" column="TOKEN"/>
		<result property="grade" column="USER_GRADE"/>
		<result property="id" column="USER_ID"/>
		<result property="pwd" column="USER_PWD"/>
		<result property="name" column="USER_NAME"/>
		<result property="phone" column="PHONE"/>
		<result property="address" column="ADDRESS"/>
		<result property="approvalKey" column="APPROVAL_KEY"/>
		<result property="approvalStatus" column="APPROVAL_STATUS"/>
		<result property="email" column="EMAIL"/>
		<result property="createDate" column="CREATE_DATE"/>
		<result property="modifyDate" column="MODIFY_DATE"/>
		<result property="status" column="STATUS"/>
		<result property="quitType" column="QUIT_TYPE"/>
		<result property="quitContent" column="QUIT_CONTENT"/>
	</resultMap>

	<select id="selectMember" parameterType="Member" resultMap="memberResultSet">
		SELECT 
          		  USER_NO
		        , TOKEN
		        , USER_GRADE
		        , USER_ID
		        , USER_PWD
		        , USER_NAME
		        , PHONE
		        , ADDRESS
		        , APPROVAL_KEY
		        , APPROVAL_STATUS
		        , EMAIL
		        , CREATE_DATE
		        , MODIFY_DATE
		        , STATUS
		        , QUIT_TYPE
		        , QUIT_CONTENT
		FROM 
        		MEMBER_TB
		WHERE
        		USER_ID = #{ id }
		AND     STATUS = 'Y'
	</select>
	
	<select id="idOverlapCheck" parameterType="String" resultType="int">
		SELECT  COUNT(*) 
		FROM
				MEMBER_TB
		WHERE 
				USER_ID = #{id}
	</select>
	
	<select id="emailOverlapCheck" parameterType="String" resultType="int">
		SELECT  COUNT(*) 
		FROM
				MEMBER_TB
		WHERE 
				EMAIL = #{email}
	</select>
	
	<insert id="insertMember" parameterType="Member">
		INSERT
		INTO MEMBER_TB
		(
			  USER_NO
			, TOKEN
			, USER_GRADE
			, USER_ID
			, USER_PWD
			, USER_NAME
			, PHONE
			, ADDRESS
			, APPROVAL_KEY
			, APPROVAL_STATUS
			, EMAIL
			, CREATE_DATE
			, MODIFY_DATE
			, STATUS
			, QUIT_TYPE
			, QUIT_CONTENT
		)
		VALUES
		(
			  SEQ_USER_NO.nextval
			, NULL
			, DEFAULT
			, #{ id }
			, #{ pwd }
			, #{ name }
			, #{ phone }
			, #{ address }
			, #{ approvalKey }
			, 'N'
			, #{ email }
			, SYSDATE
			, SYSDATE
			, DEFAULT
			, NULL
			, NULL
		)
	</insert>
	
	<update id="updateMember" parameterType="Member">
		UPDATE
				MEMBER_TB
		SET
				  PHONE = #{ phone }
				, ADDRESS = #{ address }
				, MODIFY_DATE = SYSDATE
		WHERE
				USER_NO = #{ userNo }
	</update>
	
	<update id="pwdUpdate">
		UPDATE
				MEMBER_TB
		SET
				USER_PWD = #{ pwd }
		WHERE
				USER_NO = #{ userNo }
	</update>
	
	<update id="deleteMember" parameterType="Member">
		UPDATE
				MEMBER_TB
		SET
				  STATUS = 'N'
				, QUIT_TYPE = #{ quitType }
				, QUIT_CONTENT = #{ quitContent }
		WHERE
				USER_NO = #{ userNo }
	</update>
	
	<select id="findIdSendMail" parameterType="String" resultType="string">
		SELECT 
				USER_ID
		FROM 
				MEMBER_TB
		WHERE 
				EMAIL = '${value}'
		AND 	STATUS = 'Y'
	</select>
	
	<update id="findPwdSendEmail" parameterType="Member">
		UPDATE 
		        MEMBER_TB
		SET
		        USER_PWD = #{ approvalKey }
		WHERE
		        EMAIL = #{ email }
		AND 	STATUS = 'Y'
	</update>
</mapper>